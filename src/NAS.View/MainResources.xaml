<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:NAS.View.Converters"
                    xmlns:toolsConverters="clr-namespace:ES.Tools.Converters;assembly=ES.Tools">
  <toolsConverters:NegationConverter x:Key="NegationConverter" />
  <converters:DateConverter x:Key="DateConverter" />
  <toolsConverters:InverseBooleanToVisibilityConverter x:Key="InverseVisibilityConverter" />
  <toolsConverters:TextTrimmingConverter x:Key="TextTrimConverter" />
  <toolsConverters:IsNotNullConverter x:Key="IsNotNullConverter" />
  <converters:NullToVisibilityConverter x:Key="IsNullToVisibilityConverter" />
  <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
  <SolidColorBrush x:Key="BudgetColor" Color="#80808080" />
  <SolidColorBrush x:Key="PlannedCostsColor" Color="#800000AA" />
  <SolidColorBrush x:Key="ActualCostsColor" Color="#80AA0000" />
  <SolidColorBrush x:Key="ResourceAllocationColor" Color="#8000AA00" />

  <!--#region ToolBars-->

  <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <ContentPresenter x:Name="myPresenter"
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True">
            <ContentPresenter.Style>
              <Style TargetType="ContentPresenter">
                <Setter Property="Effect">
                  <Setter.Value>
                    <DropShadowEffect BlurRadius="1"
                                      ShadowDepth="0"
                                      Color="Black" />
                  </Setter.Value>
                </Setter>
              </Style>
            </ContentPresenter.Style>
          </ContentPresenter>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="myPresenter" Property="Effect">
                <Setter.Value>
                  <DropShadowEffect BlurRadius="3"
                                    ShadowDepth="0"
                                    Color="Black" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="myPresenter" Property="Effect">
                <Setter.Value>
                  <DropShadowEffect BlurRadius="5"
                                    ShadowDepth="0"
                                    Color="Purple" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type Button}" />
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type RadioButton}" />

  <Style BasedOn="{x:Null}" TargetType="{x:Type ToolBarPanel}">
    <Setter Property="Background" Value="{x:Null}" />
  </Style>

  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Border x:Name="Border"
                  Background="WhiteSmoke"
                  BorderBrush="LightGray"
                  BorderThickness="1"
                  CornerRadius="2">
            <DockPanel>
              <ToolBarPanel x:Name="PART_ToolBarPanel"
                            Margin="0,1,2,2"
                            IsItemsHost="true" />
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--#endregion-->

  <!--#region TextBlocks-->

  <Style x:Key="H1" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="Foreground" Value="Blue" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="Padding" Value="1" />
  </Style>

  <Style x:Key="H2" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Margin" Value="2,2,2,0" />
  </Style>

  <Style x:Key="H3" TargetType="{x:Type TextBlock}">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Margin" Value="5" />
  </Style>

  <!--#endregion-->

  <!--#region General Alignments-->

  <Style x:Key="CenterAlignment">
    <Setter Property="Control.HorizontalAlignment" Value="Center" />
  </Style>

  <Style x:Key="RightAlignment">
    <Setter Property="Control.HorizontalAlignment" Value="Right" />
  </Style>

  <!--#endregion-->

  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="GridLinesVisibility" Value="None" />
    <Setter Property="AlternatingRowBackground" Value="LightGray" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="HeadersVisibility" Value="Column" />
  </Style>

  <Style TargetType="{x:Type DataGridRow}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background" Value="Yellow" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ListBoxItem}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>

  <Style x:Key="GeneralLabelStyle" TargetType="{x:Type Label}">
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Margin="{TemplateBinding Margin}"
                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <TextBlock Padding="{TemplateBinding Padding}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Background="{TemplateBinding Background}"
                       Foreground="{TemplateBinding Foreground}"
                       Text="{TemplateBinding Content}"
                       TextWrapping="Wrap" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CommentLabelStyle"
         BasedOn="{StaticResource GeneralLabelStyle}"
         TargetType="{x:Type Label}">
    <Setter Property="BorderBrush" Value="Gray" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Offset="0" Color="White" />
          <GradientStop Offset="1" Color="#FFFFFFB9" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ErrorLabelStyle"
         BasedOn="{StaticResource GeneralLabelStyle}"
         TargetType="{x:Type Label}">
    <Setter Property="Background" Value="LightSalmon" />
    <Setter Property="BorderBrush" Value="Red" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>

  <Style x:Key="WarningLabelStyle"
         BasedOn="{StaticResource GeneralLabelStyle}"
         TargetType="{x:Type Label}">
    <Setter Property="Background" Value="LightYellow" />
    <Setter Property="BorderBrush" Value="Orange" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>

  <Style x:Key="ValidatingTextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate x:Name="TextErrorTemplate">
          <DockPanel LastChildFill="True">
            <AdornedElementPlaceholder>
              <Border BorderBrush="Red" BorderThickness="2" />
            </AdornedElementPlaceholder>
            <TextBlock FontSize="20" Foreground="Red">?</TextBlock>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="True">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
